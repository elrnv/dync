name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust: [stable, nightly]

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
      - name: Version
        run: rustc --version
        run: cargo --version
      - name: Build
        run: cargo build --verbose
      - name: Test default features
        run: cargo test --verbose
      - name: Test all features
        run: cargo test --all-features --verbose
      - name: Test no default features
        run: cargo test --no-default-features --verbose
      - name: Install Valgrind
        run: sudo apt install valgrind
      - name: Run Valgrind
        run: ./valgrind_check.sh

  miri:
    name: Run Miri on Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: miri
          override: true
      - run: cargo miri test

  clippy:
    name: "Clippy (stable)"
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ github.token }}

  rustfmt:
    name: "Format (stable)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
          override: true
      - run: cargo fmt -- --check

  coverage:
    name: Run Test Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast -v
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      - uses: actions-rs/grcov@v0.1
      - uses: codecov/codecov-action@v1
        with:
          file: ./lcov.info
